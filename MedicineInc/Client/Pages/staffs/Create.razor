@page "/staffs/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Staffs</h3>
<hr />
<br />

<EditForm Model="@staff" OnValidSubmit="CreateStaff">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Staff Name: </label>
        <div>
            <InputText @bind-Value="@staff.StaffName" class="form-control" />
            <ValidationMessage For="@(() => staff.StaffName)" />
        </div>
    </div>
    <div class="form-group">
        <label>Staff Price: </label>
        <div>
            <InputText @bind-Value="@staff.StaffEmail" class="form-control" />
            <ValidationMessage For="@(() => staff.StaffEmail)" />
        </div>
    </div>
    <div class="form-group">
        <label>Staff Phone Number: </label>
        <div>
            <InputNumber @bind-Value="@staff.StaffPhone" />
            <ValidationMessage For="@(() => staff.StaffEmail)" />
        </div>
    </div>
    <button type="submit" class="btn btn-success btn-block">
        Create Staff
    </button>
    
</EditForm>

@code {
    Staff staff = new Staff();

    private IList<Staff>? Staffs;

    protected async override Task OnInitializedAsync()
    {
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndPoint}");
    }

    private async Task CreateStaff()
    {
        await _client.PostAsJsonAsync(Endpoints.StaffsEndPoint, staff);
        _navManager.NavigateTo("/staffs/");
    }

    
}


