@page "/storepage"
@inject IJSRuntime js
@inject HttpClient _client
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject CartService CartService


<h1>Main store!</h1>
<link rel="stylesheet" href="css/index.css">

<div class="products-container">
    @if (Medicines != null && Medicines.Any())
    {
        @foreach (var item in Medicines)
        {
            <div class="product">
                <img src="@item.ImageRef" alt="@item.MediName" class="product-image">
                <div class="medicine-details">
                    <h2>@item.MediName</h2>
                    <p>Price: $@item.Price</p>
                    <button @onclick='() => AddToCart(item.Id, item, 1)'>Add to Cart</button>
                </div>
            </div>
        }
    }
    else
    {
        <div class="product">
            <h2>There are no medicines available in the store!</h2>
        </div>
    }
</div>

<footer>
    <p>&copy; 2024 Online Pharmacy</p>
</footer>

@code {
    private IList<Medicine>? Medicines;

    protected override async Task OnInitializedAsync()
    {
        await LoadMedicines();
    }

    private async Task LoadMedicines()
    {
        Medicines = await _client.GetFromJsonAsync<List<Medicine>>($"{Endpoints.MedicinesEndPoint}");
    }

    private async Task AddToCart(int medicineId, Medicine medicine, int count)
    {
        await CartService.AddToCartAsync(medicineId, medicine, count);
    }
}
