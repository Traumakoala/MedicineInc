@page "/storepage"
@inject IJSRuntime js
@inject HttpClient _client

<PageTitle>Main store!</PageTitle>
<link rel="stylesheet" href="css/index.css" />

<div class="products-container">
    @if (Medicines != null && Medicines.Any())
    {
        @foreach (var item in Medicines)
        {
            <div class="product">
                <img src="@item.ImageRef" alt="@item.MediName" class="product-image">
                <div class="medicine-details">
                    <h2>@item.MediName</h2>
                    <p>Price: $@item.Price</p>
                    <div class="quantity-input">
                        <button @onclick='() => AddToCart(item.Id, item.Count)'>Add to Cart</button>
                        <input type="number" @bind="item.Count" min="1" />
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="product">
            <h2>There are no medicines available in the store!</h2>
        </div>
    }
</div>

<footer>
    <p>&copy; 2024 Online Pharmacy</p>
</footer>

@code {
    private IList<Medicine>? Medicines;

    protected override async Task OnInitializedAsync()
    {
        await LoadMedicines();
    }

    private async Task LoadMedicines()
    {
        Medicines = await _client.GetFromJsonAsync<List<Medicine>>($"{Endpoints.MedicinesEndPoint}");
    }

    private async Task AddToCart(int medicineId, int quantity)
    {
        var selectedMedicine = Medicines?.FirstOrDefault(m => m.Id == medicineId);

        if (selectedMedicine != null)
        {
            var cartItem = new
            {
                MedicineId = selectedMedicine.Id,
                Quantity = quantity
            };

            var response = await _client.PostAsJsonAsync($"{Endpoints.CartsEndPoint}", cartItem);

            if (response.IsSuccessStatusCode)
            {
                await LoadMedicines();
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error adding to cart: {errorMessage}");
            }
        }
    }
}
