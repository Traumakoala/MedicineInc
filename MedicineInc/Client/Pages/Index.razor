@* @page "/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<PageTitle>Index</PageTitle>
<h1>Featured Items!</h1>
<link href="css/index.css" rel="stylesheet" />

<div class="products-container">
    @if (Medicines != null)
    {
        @foreach (var item in Medicines.Where(q => q.feat == true).Take(4))
        {
            <div class="product">
                <img src="@item.ImageRef" alt="@item.MediName" class="product-image">
                <div class="medicine-details">
                    <h2>@item.MediName</h2>
                    <p>Price: $@item.Price</p>
                    <button @onclick='() => AddToCart(1,item.Id)'>Add to Cart</button>
                </div>
            </div>
        }
    }
    else
    {
        <div class="product">
            <h2>There are no featured items today!</h2>
        </div>
    }
</div>

<footer>
    <p>&copy; 2024 Online Pharmacy</p>
</footer>

@code {
    private IList<Medicine>? Medicines;
    private IList<Cart>? Carts;
    private IList<Customer>? Customers;

    protected override async Task OnInitializedAsync()
    {
        await LoadMedicines();
        await LoadCarts();
        await LoadCustomers();
    }
    private async Task LoadCustomers()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndPoint}");
    }

    private async Task LoadMedicines()
    {
        Medicines = await _client.GetFromJsonAsync<List<Medicine>>($"{Endpoints.MedicinesEndPoint}");
    }

    private async Task LoadCarts()
    {
        Carts = await _client.GetFromJsonAsync<List<Cart>>($"{Endpoints.CartsEndPoint}");
    }

    private async Task AddToCart(int customerId, int medicineId)
    {
        

        await _client.PutAsJsonAsync($"{Endpoints.CartsEndPoint}", Carts);

        await LoadCarts();
    }
} *@